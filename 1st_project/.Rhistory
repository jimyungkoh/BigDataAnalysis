url = 'dbms/MDC/STAT/standard/MDCSTAT03501'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 개별종목 지표 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_ind = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
write.csv(down_ind, 'data/krx_ind.csv')
down_sector = read.csv('data/krx_sector.csv', row.names = 1,
stringsAsFactors = FALSE)
down_ind = read.csv('data/krx_ind.csv',  row.names = 1,
stringsAsFactors = FALSE)
intersect(names(down_sector), names(down_ind))
setdiff(down_sector[, '종목명'], down_ind[ ,'종목명'])
KOR_ticker = merge(down_sector, down_ind,
by = intersect(names(down_sector),
names(down_ind)),
all = FALSE
)
KOR_ticker = KOR_ticker[order(-KOR_ticker['시가총액']), ]
print(head(KOR_ticker))
library(stringr)
KOR_ticker[grepl('스팩', KOR_ticker[, '종목명']), '종목명']
KOR_ticker = KOR_ticker[!grepl('스팩', KOR_ticker[, '종목명']), ]
KOR_ticker = KOR_ticker[str_sub(KOR_ticker[, '종목코드'], -1, -1) == 0, ]
rownames(KOR_ticker) = NULL
write.csv(KOR_ticker, 'data/KOR_ticker.csv')
library(httr)
library(rvest)
library(stringr)
library(xts)
library(lubridate)
library(readr)
library(timetk)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1)
print(KOR_ticker$'종목코드'[1])
KOR_ticker$'종목코드' =
str_pad(KOR_ticker$'종목코드', 6, side = c('left'), pad = '0')
ifelse(dir.exists('data/KOR_price'), FALSE,
dir.create('data/KOR_price'))
for(i in 1 : nrow(KOR_ticker) ) {
price = xts(NA, order.by = Sys.Date()) # 빈 시계열 데이터 생성
name = KOR_ticker$'종목코드'[i] # 티커 부분 선택
from = (Sys.Date() - years(3)) %>% str_remove_all('-') # 시작일
to = Sys.Date() %>% str_remove_all('-') # 종료일
# 오류 발생 시 이를 무시하고 다음 루프로 진행
tryCatch({
# url 생성
url = paste0('https://fchart.stock.naver.com/siseJson.nhn?symbol=', name,
'&requestType=1&startTime=', from, '&endTime=', to, '&timeframe=day')
# 이 후 과정은 위와 동일함
# 데이터 다운로드
data = GET(url)
data_html = data %>% read_html %>%
html_text() %>%
read_csv()
# 필요한 열만 선택 후 클렌징
price = data_html[c(1, 5)]
colnames(price) = (c('Date', 'Price'))
price = na.omit(price)
price$Date = parse_number(price$Date)
price$Date = ymd(price$Date)
price = tk_xts(price, date_var = Date)
}, error = function(e) {
# 오류 발생시 해당 종목명을 출력하고 다음 루프로 이동
warning(paste0("Error in Ticker: ", name))
})
# 다운로드 받은 파일을 생성한 폴더 내 csv 파일로 저장
write.csv(data.frame(price),
paste0('data/KOR_price/', name, '_price.csv'))
# 타임슬립 적용
Sys.sleep(2)
}
library(httr)
library(rvest)
library(stringr)
library(readr)
# 최근 영업일 구하기
url = 'https://finance.naver.com/sise/sise_deposit.nhn'
biz_day = GET(url) %>%
read_html(encoding = 'EUC-KR') %>%
html_nodes(xpath =
'//*[@id="type_1"]/div/ul[2]/li/span') %>%
html_text() %>%
str_match(('[0-9]+.[0-9]+.[0-9]+') ) %>%
str_replace_all('\\.', '')
# 코스피 업종분류 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
mktId = 'STK',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스피 업종분류 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_sector_KS = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
# 코스닥 업종분류 OTP 발급
gen_otp_data = list(
mktId = 'KSQ',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스닥 업종분류 데이터 다운로드
down_sector_KQ = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
down_sector = rbind(down_sector_KS, down_sector_KQ)
ifelse(dir.exists('data'), FALSE, dir.create('data'))
write.csv(down_sector, 'data/krx_sector.csv')
# 개별종목 지표 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
searchType = '1',
mktId = 'ALL',
trdDd = biz_day, # 최근영업일로 변경
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03501'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 개별종목 지표 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_ind = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
write.csv(down_ind, 'data/krx_ind.csv')
library(jsonlite)
url = 'http://www.wiseindex.com/Index/GetIndexComponets?ceil_yn=0&dt=20190607&sec_cd=G10'
data = fromJSON(url)
lapply(data, head)
library(httr)
library(rvest)
library(stringr)
library(readr)
# 최근 영업일 구하기
url = 'https://finance.naver.com/sise/sise_deposit.nhn'
biz_day = GET(url) %>%
read_html(encoding = 'EUC-KR') %>%
html_nodes(xpath =
'//*[@id="type_1"]/div/ul[2]/li/span') %>%
html_text() %>%
str_match(('[0-9]+.[0-9]+.[0-9]+') ) %>%
str_replace_all('\\.', '')
# 코스피 업종분류 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
mktId = 'STK',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스피 업종분류 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_sector_KS = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
# 코스닥 업종분류 OTP 발급
gen_otp_data = list(
mktId = 'KSQ',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스닥 업종분류 데이터 다운로드
down_sector_KQ = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
down_sector = rbind(down_sector_KS, down_sector_KQ)
ifelse(dir.exists('data'), FALSE, dir.create('data'))
write.csv(down_sector, 'data/krx_sector.csv')
# 개별종목 지표 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
searchType = '1',
mktId = 'ALL',
trdDd = biz_day, # 최근영업일로 변경
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03501'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 개별종목 지표 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_ind = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
write.csv(down_ind, 'data/krx_ind.csv')
library(jsonlite)
url = 'http://www.wiseindex.com/Index/GetIndexComponets?ceil_yn=0&dt=20190607&sec_cd=G10'
data = fromJSON(url)
lapply(data, head)
library(httr)
library(rvest)
library(stringr)
library(readr)
# 최근 영업일 구하기
url = 'https://finance.naver.com/sise/sise_deposit.nhn'
biz_day = GET(url) %>%
read_html(encoding = 'EUC-KR') %>%
html_nodes(xpath =
'//*[@id="type_1"]/div/ul[2]/li/span') %>%
html_text() %>%
str_match(('[0-9]+.[0-9]+.[0-9]+') ) %>%
str_replace_all('\\.', '')
# 코스피 업종분류 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
mktId = 'STK',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스피 업종분류 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_sector_KS = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
# 코스닥 업종분류 OTP 발급
gen_otp_data = list(
mktId = 'KSQ',
trdDd = biz_day, # 최근영업일로 변경
money = '1',
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03901'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 코스닥 업종분류 데이터 다운로드
down_sector_KQ = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
down_sector = rbind(down_sector_KS, down_sector_KQ)
ifelse(dir.exists('data'), FALSE, dir.create('data'))
write.csv(down_sector, 'data/krx_sector.csv')
# 개별종목 지표 OTP 발급
gen_otp_url =
'http://data.krx.co.kr/comm/fileDn/GenerateOTP/generate.cmd'
gen_otp_data = list(
searchType = '1',
mktId = 'ALL',
trdDd = biz_day, # 최근영업일로 변경
csvxls_isNo = 'false',
name = 'fileDown',
url = 'dbms/MDC/STAT/standard/MDCSTAT03501'
)
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
# 개별종목 지표 데이터 다운로드
down_url = 'http://data.krx.co.kr/comm/fileDn/download_csv/download.cmd'
down_ind = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html(encoding = 'EUC-KR') %>%
html_text() %>%
read_csv()
write.csv(down_ind, 'data/krx_ind.csv')
library(jsonlite)
url = 'http://www.wiseindex.com/Index/GetIndexComponets?ceil_yn=0&dt=20190607&sec_cd=G10'
data = fromJSON(url)
lapply(data, head)
library(httr)
library(rvest)
ifelse(dir.exists('data/KOR_fs'), FALSE,
dir.create('data/KOR_fs'))
Sys.setlocale("LC_ALL", "English")
url=paste0("http://comp.fnguide.com/SVO2/ASP/SVD_Finance.asp?pGB=1&gicode=A005930")
data = GET(url,
user_agent('Mozilla/5.0 (Windows NT 10.0; Win64; x64)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'))
data = data %>%
read_html() %>%
hteml_table()
Sys.setlocale("LC_ALL", "Korean")
library(httr)
library(rvest)
ifelse(dir.exists('data/KOR_fs'), FALSE,
dir.create('data/KOR_fs'))
Sys.setlocale("LC_ALL", "English")
url=paste0("http://comp.fnguide.com/SVO2/ASP/SVD_Finance.asp?pGB=1&gicode=A005930")
data = GET(url,
user_agent('Mozilla/5.0 (Windows NT 10.0; Win64; x64)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'))
data = data %>%
read_html() %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
library(httr)
library(rvest)
ifelse(dir.exists('data/KOR_fs'), FALSE,
dir.create('data/KOR_fs'))
Sys.setlocale("LC_ALL", "English")
url=paste0("http://comp.fnguide.com/SVO2/ASP/SVD_Finance.asp?pGB=1&gicode=A005930")
data = GET(url,
user_agent('Mozilla/5.0 (Windows NT 10.0; Win64; x64)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'))
data = data %>%
read_html() %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")'
lapply(data, function(x)) {
head(x,3)}
library(httr)
library(rvest)
ifelse(dir.exists('data/KOR_fs'), FALSE,
dir.create('data/KOR_fs'))
Sys.setlocale("LC_ALL", "English")
url=paste0("http://comp.fnguide.com/SVO2/ASP/SVD_Finance.asp?pGB=1&gicode=A005930")
data = GET(url,
user_agent('Mozilla/5.0 (Windows NT 10.0; Win64; x64)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36'))
data = data %>%
read_html() %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")'
lapply(data, function(x)) {
head(x,3)}
file.edit("~/.Renviron")
dart_api_key='72dd3f4339929439358363ba3ec96483e1e93016'
dart_api_key=Sys.getenv("dart_api_key")
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api
)
codezip_data=GET(codezip_url)
print(codezip_data)
file.edit("~/.Renviron")
dart_api_key='72dd3f4339929439358363ba3ec96483e1e93016'
dart_api=Sys.getenv("dart_api_key")
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
print(codezip_data)
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
tf=tempfile(fileext = '.zip')
writeBin(
content(codezip_data, as="raw"),
file.path(tf)
)
nm=unzip(tf, list=TRUE)
print(nm)
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
tf=tempfile(fileext = '.zip')
writeBin(
content(codezip_data, as="raw"),
file.path(tf)
)
nm=unzip(tf, list=TRUE)
code_data=read_xml(unzip(tf,nm$Name))
print(code_data)
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
tf=tempfile(fileext = '.zip')
writeBin(
content(codezip_data, as="raw"),
file.path(tf)
)
nm=unzip(tf, list=TRUE)
code_data=read_xml(unzip(tf,nm$Name))
print(code_data)
corp_code=code_data %>% html_nodes('corp_code') %>% html_text()
corp_name=code_data %>% html_nodes('corp_name') %>% html_text()
corp_stock=code_data %>% html_nodes('stock_code') %>% html_text()
corp_list=data.frame(
'code'=corp_code,
'name'=corp_name,
'stock'=corp_stock,
stringsAsFactors = FALSE
)
nrow(corp_list)
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
tf=tempfile(fileext = '.zip')
writeBin(
content(codezip_data, as="raw"),
file.path(tf)
)
nm=unzip(tf, list=TRUE)
code_data=read_xml(unzip(tf,nm$Name))
print(code_data)
corp_code=code_data %>% html_nodes('corp_code') %>% html_text()
corp_name=code_data %>% html_nodes('corp_name') %>% html_text()
corp_stock=code_data %>% html_nodes('stock_code') %>% html_text()
corp_list=data.frame(
'code'=corp_code,
'name'=corp_name,
'stock'=corp_stock,
stringsAsFactors = FALSE
)
nrow(corp_list)
head(corp_list)
library(httr)
library(rvest)
codezip_url=paste0(
"https://opendart.fss.or.kr/api/corpCode.xml?crtfc_key=",dart_api_key
)
codezip_data=GET(codezip_url)
codezip_data$headers[["content-disposition"]]
tf=tempfile(fileext = '.zip')
writeBin(
content(codezip_data, as="raw"),
file.path(tf)
)
nm=unzip(tf, list=TRUE)
code_data=read_xml(unzip(tf,nm$Name))
print(code_data)
corp_code=code_data %>% html_nodes('corp_code') %>% html_text()
corp_name=code_data %>% html_nodes('corp_name') %>% html_text()
corp_stock=code_data %>% html_nodes('stock_code') %>% html_text()
corp_list=data.frame(
'code'=corp_code,
'name'=corp_name,
'stock'=corp_stock,
stringsAsFactors = FALSE
)
nrow(corp_list)
head(corp_list)
corp_list=corp_list[corp_list$stock !=" ",]
write.csv(corp_list, 'data/corp_list.csv')
